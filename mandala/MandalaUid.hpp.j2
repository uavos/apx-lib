{%- extends 'Mandala.j2' %}

{% set ns = namespace(meta_id=0) %}

{%- macro mandala_uid_expand(d, indent=0, level=0, uid=0) -%}
{% set ind = ' '*indent*indent_size %}
{%- if d.content is defined -%}
{{ ind }}namespace {{ d.name }}
{{ ind }}{
{% set has_leaf = d.content | selectattr("content", "undefined") | list | length > 0 %}
{% if has_leaf %}
{{ ind }}    enum { bundle = 0x{{ '%0x' % uid }} };
{%- endif %}

{% set ns.meta_id = ns.meta_id+1 %}
{% set uid_pow = data.uid_bits[level+2:]|sum %}
{% set uid_mul = 2**uid_pow %}
{% for i in d.content %}
{% if i.reserved is undefined %}
{{ mandala_uid_expand(i, indent+1, level+1, uid+loop.index0*uid_mul) }}
{% endif %}
{% endfor %}
{{ ind }}};
{%- else -%}
{{ ind }}enum { {{ d.name }} = 0x{{ '%0x' % (uid+1) }} };
{%- endif -%}
{%- endmacro -%}

{%- block content -%}
// generated file

#pragma once


namespace mandala {

// constants
enum constants_e : uint8_t {
{{ mandala_constants(1) }}
};

// tree
{% for i in data.content %}
{% set uid_pow = data.uid_bits[1:]|sum %}
{% set uid_mul = 2**uid_pow %}
{{ mandala_uid_expand(i, 0, 0, data.uid_base+loop.index0*uid_mul) }}
{% endfor %}

}; // namespace

{% endblock %}
